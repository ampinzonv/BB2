2023-10-21
* Completed the interface for run::blast.

2023-10-21
* Created the BBalign::run_blast function backbone.
* Created test_align_run_blast backbone.
* Found a bug in PROCESS_OPTARGS that shows an error if the option "-e" is used in the list of arguments.

2023-07-29
* bashrc_osx y bashrc_linux replaced by a unified bashrc_dev file.
* Corrected bug in test_format_sam_to_bam that was given different results in OSX and Linux machines.
* Added Linux NCBI-BLAST+ binaries version 2.14.0.
*  Fixed bug in os::show_system_memory that prevented correct memory assesment in Linux systems.
* Added test_db_make_blast_db
* FIXED LINUX COMPATIBILITY SO FAR.

2023-07-28
* First serious testing on Linux machine.
* test_format_sam_to_bam: gzcat was changed by "gunzip -c" in line 34. Test file was changed from toy.sam to small.sam. This due to the fact that linux complains about gzcat not installed. Willing that OSX accepts this change.
* bashrc_linux modified to reflect Linux paths.

2023-07-26
* Readme file minor changes.
* Polishing bb_make_blast_db.

2023-07-22
* BBdb::make_blast_db implemented.
* BBdb::make_blast_db unit testing implemented.
* Changed the order of execution of unit testing tests. 
* blastp, blastn, blastx and makeblastdb binaries added to $BIOBASH_BIN_OS path in OSX.

2023-07-21
* Fixed bug in get_assembly_consensus that prevented BBfile::get_assembly_consensus from showing
the appropriate error message if input file was not defined.
* Fixed bug in bb_convert_sam_to_bam that prevented BBformat::sam_to_bam from showing
the appropriate error message if input file was not defined.
* bb_convert_sam_to_bam re-named to bb_sam_to_bam.
* BBdb::make_blast_db initiated.

2023-07-19
* BBFile::get_assembly_consensus implemented.
* test_file_get_assembly_consensus implemented.
* bb_get_assembly_consensus implemented.

2023-07-18
* bb_fastq_to_fasta added.
* bb_get_fastq_quality added.
* bb_multiple_fasta_to_singles added.
* Fixed minor issues in some core functions.
* Fixed bug that was not copying "version" file during installation

2023-06-14
* bb_get_fasta_info added.
* Reported issues #8 and #9 in: https://github.com/ampinzonv/BB2/issues
* Fixed path to executables in installbiobash.

2023-06-13
* bb_map_reads_to_genome implemented.
* Reseting repo again for big files.

2023-06-07
* BBformat::sam_to_bam implemented.
* New toy.sam file added to testdata (obtained from: https://github.com/samtools/samtools/blob/develop/examples/toy.sam)
* BBfile::fastq_to_fasta was replicated to: BBformat::fastq_to_fasta. Bothe kept for backwards compatibility (seems safe to delete the former).
* "sandbox" dir is now maintained OUTSIDE the repository particualrly for holding large SAM files.
* In house generated  Forward and Reverse FQ files (seqkit) and interleaved version (bbmap) from hepatitis virus added to testdata (see testdata/README).
* New brand BIOBASH logo! Hey!
* bb_index_genome created (Starting our way to pre-Sabbatical build).
* bb_convert_sam_to_bam created.


2023-05-31
* BBalign::map_reads_to_genome complete.

2023-05-30
* Solved issue with Git push. Named here for repo tracking.
* Dev branch re-taken again.

2023-05-29
* Compiled samtools for osx and linux (beta-testing).
* On linux samtools was compiled without ncurses support.
* Drafted BBalign::map_reads_to_genome.


2023-05-27
* BBindex::genome_indexing function created.
* Unit test for BBindex::genome_indexing cretaed.
* Added the hepatitis delta virus (NC_076107.1, 1.6Kb size) to test data.

2023-05-25
* New "all" folder created for holding software agnostic from OS (ej. bbmap).
* setup_environment modified to reflect this changes. 
* New BIOBASH_EXEC var added to hold BB final user scripts.
* BIOBASH_BIN var now points to $BIOBASH_HOME/bin
* BBmap binaries added to BIOBASH_BIN/all folder
* BIOBASH_HOME/bashrc_osx modified to reflect changes in variables.
* BIOBASH_HOME/bashrc_linux modified to reflect changes in variables.
* "Scripts" folder renamed to "exec" to reflect changes in variables.
* Created new function: os::show_system_memory

2023-05-17
* Java added as a dependency for BIOBASH. Needed for using ASCIIGENOME and maybe BBMAP.
* First API documentation created using shdoc and pandoc.

2023-04-17
* Implemented BBseq::get_fastq_quality
* Improved output for Unitesting. Implemented unit_test_spacer

2023-04-09
* Implemented support for input from STDIN in BBfile::multiple_fasta_to_singles
* Implemented support for input from STDIN in BBseq::get_fasta_components

2023-04-07
* Implemented support for input from STDIN in BBfile::is_fastq
* Implemented support for input from STDIN in BBfile::fastq_to_fasta

2023-04-05
* Fixed a bug in os::default_number_of_cores testing that failed during testing. Even division by 3 was generating "0". Tests expected "1".
* bb_uninstall_biobash moved to root dir, soit can be used for install and uninstallation. 
* Implemented support for input from STDIN in BBfile::is_fasta and BBfile::is_multiple.
* Fixed issue #6 which counted all ">" in fasta input  when only 2 were needed.

2023-03-30
* Updated process_optargs to the latest version. Fixes the issue of script hanging when value not passed to key.
* BBfile::fastq_to_fasta now receives a -j/--jobs argument for parallel computing.
* BBfile::multiple_fasta_to_singles now receives a -j/--jobs argument for parallel computing.
* BBseq::get_fasta_components now receives a -j/--jobs argument for parallel computing.
* A os::default_number_of_processors function was implemented. Defaults to 1 cpu core (see function comments).
* "bc" added  to software requirements during installation.

2023-03-28
* Beautified Biobash Standard Test.
* BBIO::get_data_stream now checks for empty input (missing data from STDIN).
* BBFile::is_fasta now requires the mandatory "-i/--input" for input file.
* BBFile::is_multiple_fasta now requires the mandatory "-i/--input" for input file.
* BBFile::is_fastq now requires the mandatory "-i/--input" for input file.
* BBFile::fastq_to_fasta now requires the mandatory "-i/--input" for input file.
* BBFile::fastq_to_fasta now requires the optional output key value to be set to -o/--output.
* BBFile::multiple_fasta_to_singles now requires the mandatory "-i/--input" for input file.
* BBFile::multiple_fasta_to_singles now requires the optional output folder key/value to be set to -o/--output.
* Install script updated to reflect new paths. Tested on OSX.
* Install script now copies unitesting and testdata folders.
* Installation/unistallation and unit testing in OSX and Linux/Ubuntu successful.
* Released the 0.2.0 version of BioBASH.  


2023-03-27
* BBFile::get_fasta_components completely imnplemented.
* Implemented third party "process_optargs" lib to parse CLI arguments. 

2023-03-21
*Initiated BBFile::get_fasta_components

2023-03-21
* Implemented a function to create random strings: string::random 
* Implemented BBfile::uncompress to uncompress gzipped files (usaully fats or fastq files).

2023-03-21
* BBFile_is_fasta implemented.
* BBFile_is_fastq implemented.
* BBFile_is_multiple implemented.
* added unit_test_footer and unit_test_header functions to unit_testing_common.
* BB_file_fastq_to_fasta implemented

2023-03-17
* feedback.sh modified so outputs do not show a "new line".
* Unit test inform  the script that is actually  running.
* Added test_unit_test to test unit_test itself.
* BBio functions were sent to io.sh since these were general io operations not specific to bioinformatics.
* BBfile.sh was created to handle specific operation on bioinformatics files.
* Functions over bioinfo files were moved form file.sh to BBfile.sh
* unit_test scripts were modified according to recent changes.
* BBFormat.sh was taken out since its hypothetical routines should (hypothetically) be in BBfile.sh
* get_exit_code function added to io.sh

2023-03-16
* bb_native renamed to bb_utility and implied scripts re-accomodated to reflect that.
* New unittesting dir created.
* Unit test created for BBIO::get_data_stream
* variable::is_numeric regexp update to handle float numbers too.
* Fixed eval_outcome to (partially) handle evaluation of strings too (see issue BIOB-62)
* unit_testing_common file created for holding common routines for unit testing.

2023-03-08 (FORK)
* KEY CHANGES in the way BB operates. Implementing API.
* Development bashrc_osx/linux changed to reflect new BB2 folder.
* Created biobash library file structure.
* dummy function structure created for Bio::IO module.

2023-03-01
* By default sequence_info don't show header information. "-h(eader)" optional flag implemented.
* unit test for sequence_info_implemented

2023-03-01
* Unit testing added to most implemented functions.
* eval_outcome in unit_test_functions now evals also float numbers.

2023_02-14
* bb_sequence_info finalizada.
* Posibilidad de mejorar performance en bb_sequence_info se registra como enhancement en github issues.

2023_02-13
* bashrc_osx and bashrc_linux files updated to reflect 64 bits paths.

2023_02-10
* sequence_info improved performance. We sacrifice N90 for that.
* sequence_info fasta analysis complete.


2023_01-31
* Fixed bug in sequence_info that showed path to temporary file when script was read from STDIN.

2023_01-30
* Installation was modified to check for cpucores and cpu architecture.
* Appropriate installation directories created for different architectures. 
* Seqkit replaces Seqtk.
* "Seqkit stast" replaces "seqcounts" from EMBOSS in bb_count_seqs.
* "Seqkit stast" replaces "infoseq" from EMBOSS in bb_sequence_info.

2023-01-27
* bb_sequence_info now also determines n50 on fasta files.

2023-01-23
* Added a protein test file :apoe_prot.fasta
* Dummy function (file::guess_sequence_type) to guess if a file holds nucleotide or aminoacid data is added to lib/bb_native/file.sh.
* Added non production stable bb_sequence_info script.

2023-01-17
* bb_get_list renamed to bb_get_nr_list, still mantains the same double behaviour of displaying a nr list with or without frequencies.
* Added new script bb_extract_subset_from_list.
* New tagged version (0.1.3) released.

2023-01-12
* Fixed bug in bb_get_list when data came from a pipe and the "-f" option was present.

2023-01-12
* get_nr_list and get_freq_from_list now merged into a sigle script: bb_get_list (-f option to get frequencies).

2022-12-02
* bb_get_nr_list added to the set of scripts.
* A new mets.lst file added to the set of testdata.
* Improved feedback::help function. Now accepts two string variables.


2022-11-28
* Shebang changed to /usr/bin/env bash in all scripts.
* New feedback::help function added to feedback lib.
* Created structure to work with  bb_get_nr_list

2022-11-19
* Emboss added to the list of dependencies check.
* BB main scripts now moved to a directory called "source".
* in "installbiobash" script, BB main scripts are now copied from "source" directory.

2022-11-3
* Solved bug in setup_environment that hardcoded the full $PATH in .bashrc file. This prevented any actualization of PATH variable to take effect, because it was already hardcoded by Biobash installer. Now the variable "$PATH" is writen in the .bashrc file not the hardcoded path (line 208).
* Fixed bug in bb_get_fasta_headers line 116 with expected unary operator when running script with "-i".

2022-11-3
* Uninstaller now cleans up bashrc file ufter unistallation.
* Other minor aesthetic updates  implemented in install/Uninstall.

2022-11-2
* Uninstallation now erases BB paths from PATH. echo $PATH is now uncluttered.
* BB installer now hadds a BEGIN and END section to .bashrc. This will be useful for erasing the whole content in uninstallation script.

2022-10-31
* io.sh functions now return 0 (TRUE) and 1 (FALSE). This is done to keep consistency across most functions in library.
* An stable version of input check has been reached and implemented in bb_get_fasta_headers.
* A new version of BB  with this changes released today.

2022-10-28
* io.sh is updated. input_is_empty was moved to "script_has_args". 
* input_is_file_or_pipe was moved to "input_is_pipe".  so Each function now evaluates a specific script state.

2022-10-26
* Input validation now is implemented in a new library called io.sh.
* Created two functions: input_is_empty and input_is_file_or_pipe. 

2022-09-15
* Functional input validation of STDIN/STDOUT (issue #3 in GitHub). Although not yet fully implemented. It partially works on bb_get_fasta_headers but has to be implemented as function.

2022-09-14
* Minor changes to error msg in in bb_get_fasta_headers.
* Issue #2 in Github marked as solved.

2022-05-15
* Fixed bug in setup_environment, that prevented "/usr/local/bin" to be searched in $PATH.

2022-05-15
* "realpath" changed for file::full_path.

2022-05-13
* bb_native is now the only library used in BB. bash-utility and bb_native  were merged.
* new function file::is_fasta added to  bb_native/file.sh.
* new function file::is_multiple_fasta added to  bb_native/file.sh.
* new function file::is_fastq added to  bb_native/file.sh.
* New test data for above functions was added.
* No functional function file::is_vcf added.
* No functional functions file::is_vcf, file::is_bed, file::is_fast5 were added.
* Most functions were standarized to utput 0, 1 or 2.

2022-05-10
* Functional routine to read from STDIN added to bb_get_fasta_headers.
* Theres still a bug, since calling script without arguments makes it wait forever because of "cat".

2022-05-09
* Environment vars starting with "BB_" where renamed to "BIOBASH_"
* Added biobashrc_osx. This is a file to source only for development.
* New bb_native functions to validate fasta (isFasta) and multiple fasta files (isMultipleFasta).

2022-05-08
* New BIOBASH_OS variable added in setup_environment. Replaces BIOBASH_OS_osx/linux vars.
* bb_get_fasta_headers is used as started ponit to create a "model" script forfuther dev. 

2023-03-07
* sequence_info changed to file_info. It better reflects what it does: operate over a single/multiple file.
* dummy sequence_info script added. It operates over individual sequences not whole files.

2023-03-05
* Added unistallation script
* Fixed BIOBASH_BIN_OS issue that was not getting the path to OS specific binaries.

2023-03-05
* checkdependencies and installbiobash scripts are stable and perform the minimum necessary
validations as to be considered "stable".
* Created a tag with this version of BioBash.

2023-03-05
* installbiobash script was modified, so it performs basic install now. 

2021-12-15
* Stripped template bashrc. Left only strictly neccesary variables.

2021-12-05
* Added check dependencies script.
* Added seqtk installer.

2021-12-03
* Defined a new feedback function "say" on bb_native library.

2021-12-02
* Environmental variables now go harcoded on .bashrc file

2021-12-01
* General structure and a simple installation script added.
* Added way around to source environmental variable file in all scripts.
